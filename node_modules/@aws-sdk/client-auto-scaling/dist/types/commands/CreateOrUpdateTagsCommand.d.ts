import { AutoScalingClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AutoScalingClient";
import { CreateOrUpdateTagsType } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateOrUpdateTagsCommandInput = CreateOrUpdateTagsType;
export declare type CreateOrUpdateTagsCommandOutput = __MetadataBearer;
/**
 * <p>Creates or updates tags for the specified Auto Scaling group.</p>
 *         <p>When you specify a tag with a key that already exists, the operation overwrites the
 *             previous tag definition, and you do not get an error message.</p>
 *         <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling groups and
 *                 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
 */
export declare class CreateOrUpdateTagsCommand extends $Command<CreateOrUpdateTagsCommandInput, CreateOrUpdateTagsCommandOutput, AutoScalingClientResolvedConfig> {
    readonly input: CreateOrUpdateTagsCommandInput;
    constructor(input: CreateOrUpdateTagsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AutoScalingClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateOrUpdateTagsCommandInput, CreateOrUpdateTagsCommandOutput>;
    private serialize;
    private deserialize;
}
