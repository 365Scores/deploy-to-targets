import { ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ECSClient";
import { UpdateContainerAgentRequest, UpdateContainerAgentResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type UpdateContainerAgentCommandInput = UpdateContainerAgentRequest;
export declare type UpdateContainerAgentCommandOutput = UpdateContainerAgentResponse & __MetadataBearer;
/**
 * <p>Updates the Amazon ECS container agent on a specified container instance. Updating the
 * 			Amazon ECS container agent does not interrupt running tasks or services on the container
 * 			instance. The process for updating the agent differs depending on whether your container
 * 			instance was launched with the Amazon ECS-optimized AMI or another operating system.</p>
 * 		       <p>
 * 			         <code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon Linux with
 * 			the <code>ecs-init</code> service installed and running. For help updating the Amazon ECS
 * 			container agent on other operating systems, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually Updating the Amazon ECS Container Agent</a> in the
 * 				<i>Amazon Elastic Container Service Developer Guide</i>.</p>
 */
export declare class UpdateContainerAgentCommand extends $Command<UpdateContainerAgentCommandInput, UpdateContainerAgentCommandOutput, ECSClientResolvedConfig> {
    readonly input: UpdateContainerAgentCommandInput;
    constructor(input: UpdateContainerAgentCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ECSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContainerAgentCommandInput, UpdateContainerAgentCommandOutput>;
    private serialize;
    private deserialize;
}
