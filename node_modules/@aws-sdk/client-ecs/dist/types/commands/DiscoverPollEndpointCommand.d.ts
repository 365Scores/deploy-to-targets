import { ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ECSClient";
import { DiscoverPollEndpointRequest, DiscoverPollEndpointResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DiscoverPollEndpointCommandInput = DiscoverPollEndpointRequest;
export declare type DiscoverPollEndpointCommandOutput = DiscoverPollEndpointResponse & __MetadataBearer;
/**
 * <note>
 *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>
 *          </note>
 *          <p>Returns an endpoint for
 * 			the Amazon ECS agent to poll for updates.</p>
 */
export declare class DiscoverPollEndpointCommand extends $Command<DiscoverPollEndpointCommandInput, DiscoverPollEndpointCommandOutput, ECSClientResolvedConfig> {
    readonly input: DiscoverPollEndpointCommandInput;
    constructor(input: DiscoverPollEndpointCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ECSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DiscoverPollEndpointCommandInput, DiscoverPollEndpointCommandOutput>;
    private serialize;
    private deserialize;
}
