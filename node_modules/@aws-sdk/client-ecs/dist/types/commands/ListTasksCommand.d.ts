import { ECSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ECSClient";
import { ListTasksRequest, ListTasksResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListTasksCommandInput = ListTasksRequest;
export declare type ListTasksCommandOutput = ListTasksResponse & __MetadataBearer;
/**
 * <p>Returns a list of tasks for a specified cluster. You can filter the results by family
 * 			name, by a particular container instance, or by the desired status of the task with the
 * 				<code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code>
 * 			parameters.</p>
 * 		       <p>Recently stopped tasks might appear in the returned results. Currently, stopped tasks
 * 			appear in the returned results for at least one hour. </p>
 */
export declare class ListTasksCommand extends $Command<ListTasksCommandInput, ListTasksCommandOutput, ECSClientResolvedConfig> {
    readonly input: ListTasksCommandInput;
    constructor(input: ListTasksCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ECSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTasksCommandInput, ListTasksCommandOutput>;
    private serialize;
    private deserialize;
}
